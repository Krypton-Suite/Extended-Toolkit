#region BSD License
/*
 * Use of this source code is governed by a BSD-style
 * license or other governing licenses that can be found in the LICENSE.md file or at
 * https://raw.githubusercontent.com/Krypton-Suite/Extended-Toolkit/master/LICENSE
 */
#endregion

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Krypton.Toolkit.Suite.Extended.Settings {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "16.5.0.0")]
    internal sealed partial class CustomTextColourSettings : global::System.Configuration.ApplicationSettingsBase {
        
        private static CustomTextColourSettings defaultInstance = ((CustomTextColourSettings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new CustomTextColourSettings())));
        
        public static CustomTextColourSettings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Drawing.Color CustomTextColourOne {
            get {
                return ((global::System.Drawing.Color)(this["CustomTextColourOne"]));
            }
            set {
                this["CustomTextColourOne"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Drawing.Color CustomTextColourTwo {
            get {
                return ((global::System.Drawing.Color)(this["CustomTextColourTwo"]));
            }
            set {
                this["CustomTextColourTwo"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Drawing.Color CustomTextColourThree {
            get {
                return ((global::System.Drawing.Color)(this["CustomTextColourThree"]));
            }
            set {
                this["CustomTextColourThree"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Drawing.Color CustomTextColourFour {
            get {
                return ((global::System.Drawing.Color)(this["CustomTextColourFour"]));
            }
            set {
                this["CustomTextColourFour"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Drawing.Color CustomTextColourFive {
            get {
                return ((global::System.Drawing.Color)(this["CustomTextColourFive"]));
            }
            set {
                this["CustomTextColourFive"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Drawing.Color CustomTextColourSix {
            get {
                return ((global::System.Drawing.Color)(this["CustomTextColourSix"]));
            }
            set {
                this["CustomTextColourSix"] = value;
            }
        }
    }
}
