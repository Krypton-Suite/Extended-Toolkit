<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="circularPictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>