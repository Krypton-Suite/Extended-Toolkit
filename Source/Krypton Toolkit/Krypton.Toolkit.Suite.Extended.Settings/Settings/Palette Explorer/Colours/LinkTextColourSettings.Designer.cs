#region BSD License
/*
 * Use of this source code is governed by a BSD-style
 * license or other governing licenses that can be found in the LICENSE.md file or at
 * https://raw.githubusercontent.com/Krypton-Suite/Extended-Toolkit/master/LICENSE
 */
#endregion

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Krypton.Toolkit.Suite.Extended.Settings {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "16.5.0.0")]
    internal sealed partial class LinkTextColourSettings : global::System.Configuration.ApplicationSettingsBase {
        
        private static LinkTextColourSettings defaultInstance = ((LinkTextColourSettings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new LinkTextColourSettings())));
        
        public static LinkTextColourSettings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Drawing.Color LinkFocusedColour {
            get {
                return ((global::System.Drawing.Color)(this["LinkFocusedColour"]));
            }
            set {
                this["LinkFocusedColour"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Drawing.Color LinkHoverColour {
            get {
                return ((global::System.Drawing.Color)(this["LinkHoverColour"]));
            }
            set {
                this["LinkHoverColour"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Drawing.Color LinkNormalColour {
            get {
                return ((global::System.Drawing.Color)(this["LinkNormalColour"]));
            }
            set {
                this["LinkNormalColour"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Drawing.Color LinkVisitedColour {
            get {
                return ((global::System.Drawing.Color)(this["LinkVisitedColour"]));
            }
            set {
                this["LinkVisitedColour"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Drawing.Color LinkDisabledColour {
            get {
                return ((global::System.Drawing.Color)(this["LinkDisabledColour"]));
            }
            set {
                this["LinkDisabledColour"] = value;
            }
        }
    }
}
