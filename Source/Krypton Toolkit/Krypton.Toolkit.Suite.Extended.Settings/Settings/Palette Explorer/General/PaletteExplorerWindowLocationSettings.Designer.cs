#region BSD License
/*
 * Use of this source code is governed by a BSD-style
 * license or other governing licenses that can be found in the LICENSE.md file or at
 * https://raw.githubusercontent.com/Krypton-Suite/Extended-Toolkit/master/LICENSE
 */
#endregion

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Krypton.Toolkit.Suite.Extended.Settings
{


    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "16.5.0.0")]
    internal sealed partial class PaletteExplorerWindowLocationSettings : global::System.Configuration.ApplicationSettingsBase
    {

        private static PaletteExplorerWindowLocationSettings defaultInstance = ((PaletteExplorerWindowLocationSettings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new PaletteExplorerWindowLocationSettings())));

        public static PaletteExplorerWindowLocationSettings Default
        {
            get
            {
                return defaultInstance;
            }
        }

        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0, 0")]
        public global::System.Drawing.Point MainWindowLocation
        {
            get
            {
                return ((global::System.Drawing.Point)(this["MainWindowLocation"]));
            }
            set
            {
                this["MainWindowLocation"] = value;
            }
        }

        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0, 0")]
        public global::System.Drawing.Point PalettePropertiesPaneWindowLocation
        {
            get
            {
                return ((global::System.Drawing.Point)(this["PalettePropertiesPaneWindowLocation"]));
            }
            set
            {
                this["PalettePropertiesPaneWindowLocation"] = value;
            }
        }

        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0, 0")]
        public global::System.Drawing.Point ColourPropertiesWindowLocation
        {
            get
            {
                return ((global::System.Drawing.Point)(this["ColourPropertiesWindowLocation"]));
            }
            set
            {
                this["ColourPropertiesWindowLocation"] = value;
            }
        }
    }
}
