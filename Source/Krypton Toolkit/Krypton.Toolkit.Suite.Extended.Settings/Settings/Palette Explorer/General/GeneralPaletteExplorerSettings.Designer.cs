#region BSD License
/*
 * Use of this source code is governed by a BSD-style
 * license or other governing licenses that can be found in the LICENSE.md file or at
 * https://raw.githubusercontent.com/Krypton-Suite/Extended-Toolkit/master/LICENSE
 */
#endregion

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Krypton.Toolkit.Suite.Extended.Settings {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "16.5.0.0")]
    internal sealed partial class GeneralPaletteExplorerSettings : global::System.Configuration.ApplicationSettingsBase {
        
        private static GeneralPaletteExplorerSettings defaultInstance = ((GeneralPaletteExplorerSettings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new GeneralPaletteExplorerSettings())));
        
        public static GeneralPaletteExplorerSettings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool ShowPalettePropertiesPane {
            get {
                return ((bool)(this["ShowPalettePropertiesPane"]));
            }
            set {
                this["ShowPalettePropertiesPane"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool ShowColourPropertiesPane {
            get {
                return ((bool)(this["ShowColourPropertiesPane"]));
            }
            set {
                this["ShowColourPropertiesPane"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool ShowCircularDisplay {
            get {
                return ((bool)(this["ShowCircularDisplay"]));
            }
            set {
                this["ShowCircularDisplay"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool ShowStandardDisplay {
            get {
                return ((bool)(this["ShowStandardDisplay"]));
            }
            set {
                this["ShowStandardDisplay"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0")]
        public int DisplayIndex {
            get {
                return ((int)(this["DisplayIndex"]));
            }
            set {
                this["DisplayIndex"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool ShowAdvancedDetails {
            get {
                return ((bool)(this["ShowAdvancedDetails"]));
            }
            set {
                this["ShowAdvancedDetails"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("White")]
        public global::System.Drawing.Color DefaultColour {
            get {
                return ((global::System.Drawing.Color)(this["DefaultColour"]));
            }
            set {
                this["DefaultColour"] = value;
            }
        }
    }
}
