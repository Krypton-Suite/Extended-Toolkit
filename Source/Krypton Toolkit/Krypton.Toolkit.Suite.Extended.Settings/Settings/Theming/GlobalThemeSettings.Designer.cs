//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Krypton.Toolkit.Suite.Extended.Settings.Settings.Theming {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "17.3.0.0")]
    internal sealed partial class GlobalThemeSettings : global::System.Configuration.ApplicationSettingsBase {
        
        private static GlobalThemeSettings defaultInstance = ((GlobalThemeSettings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new GlobalThemeSettings())));
        
        public static GlobalThemeSettings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool ShowResetButton {
            get {
                return ((bool)(this["ShowResetButton"]));
            }
            set {
                this["ShowResetButton"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool ShowImportButton {
            get {
                return ((bool)(this["ShowImportButton"]));
            }
            set {
                this["ShowImportButton"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Office 365 - Blue")]
        public global::Krypton.Toolkit.PaletteMode SelectedThemePaletteMode {
            get {
                return ((global::Krypton.Toolkit.PaletteMode)(this["SelectedThemePaletteMode"]));
            }
            set {
                this["SelectedThemePaletteMode"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Office 365 - Black (Dark Mode)")]
        public global::Krypton.Toolkit.PaletteMode DarkModeThemePaletteMode {
            get {
                return ((global::Krypton.Toolkit.PaletteMode)(this["DarkModeThemePaletteMode"]));
            }
            set {
                this["DarkModeThemePaletteMode"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Office 365 - Blue")]
        public global::Krypton.Toolkit.PaletteMode LightModeThemePaletteMode {
            get {
                return ((global::Krypton.Toolkit.PaletteMode)(this["LightModeThemePaletteMode"]));
            }
            set {
                this["LightModeThemePaletteMode"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Office 365 - Blue")]
        public global::Krypton.Toolkit.PaletteModeManager SelectedThemePaletteModeManager {
            get {
                return ((global::Krypton.Toolkit.PaletteModeManager)(this["SelectedThemePaletteModeManager"]));
            }
            set {
                this["SelectedThemePaletteModeManager"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Office 365 - Black (Dark Mode)")]
        public global::Krypton.Toolkit.PaletteModeManager DarkModeThemePaletteModeManager {
            get {
                return ((global::Krypton.Toolkit.PaletteModeManager)(this["DarkModeThemePaletteModeManager"]));
            }
            set {
                this["DarkModeThemePaletteModeManager"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Office 365 - Blue")]
        public global::Krypton.Toolkit.PaletteModeManager LightModeThemePaletteModeManager {
            get {
                return ((global::Krypton.Toolkit.PaletteModeManager)(this["LightModeThemePaletteModeManager"]));
            }
            set {
                this["LightModeThemePaletteModeManager"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string CustomThemePath {
            get {
                return ((string)(this["CustomThemePath"]));
            }
            set {
                this["CustomThemePath"] = value;
            }
        }
    }
}
